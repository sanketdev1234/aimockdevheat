<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>NeuroInterview | AI-Powered Mock Interviews</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --neural-primary: #00f0ff;
      --neural-secondary: #7b2dff;
      --neural-dark: #0a0e17;
      --neural-card: rgba(15, 23, 42, 0.7);
    }
    
    body {
      background-color: var(--neural-dark);
      background-image: 
        radial-gradient(circle at 25% 25%, rgba(123, 45, 255, 0.15) 0%, transparent 40%),
        radial-gradient(circle at 75% 75%, rgba(0, 240, 255, 0.15) 0%, transparent 40%);
      color: #e2e8f0;
      font-family: 'Inter', sans-serif;
    }
    
    .neural-card {
      background: var(--neural-card);
      backdrop-filter: blur(12px);
      border: 1px solid rgba(255, 255, 255, 0.05);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      border-radius: 16px;
      transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.1);
    }
    
    .gradient-text {
      background: linear-gradient(90deg, var(--neural-primary), var(--neural-secondary));
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
    }
    
    .neural-path {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      pointer-events: none;
      overflow: hidden;
      z-index: -1;
    }
    
    .neural-path::before {
      content: '';
      position: absolute;
      width: 200%;
      height: 200%;
      top: -50%;
      left: -50%;
      background-image: 
        linear-gradient(to right, rgba(123, 45, 255, 0.08) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(123, 45, 255, 0.08) 1px, transparent 1px);
      background-size: 40px 40px;
      animation: moveGrid 80s linear infinite;
    }
    
    @keyframes moveGrid {
      0% { transform: translate(0, 0); }
      100% { transform: translate(40px, 40px); }
    }
    
    .glow-button {
      position: relative;
      overflow: hidden;
    }
    
    .glow-button::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(
        to bottom right,
        rgba(0, 240, 255, 0.3),
        rgba(123, 45, 255, 0.3),
        transparent
      );
      transform: rotate(30deg);
      animation: shine 3.5s infinite;
    }
    
    @keyframes shine {
      0% { transform: translateX(-100%) rotate(30deg); }
      100% { transform: translateX(100%) rotate(30deg); }
    }
    
    .ai-response {
      border-left: 3px solid var(--neural-primary);
      animation: fadeInLeft 0.8s ease-out;
    }
    
    .typewriter {
      overflow: hidden;
      white-space: pre-wrap;
      animation: 
        typing 3.5s steps(40, end),
        blink-caret 0.75s step-end infinite;
    }
    
    @keyframes typing {
      from { width: 0 }
      to { width: 100% }
    }
    
    @keyframes blink-caret {
      from, to { border-color: transparent }
      50% { border-color: var(--neural-primary); }
    }
    
    .pulse-dot {
      animation: pulse 2.5s infinite;
    }
    
    @keyframes pulse {
      0% { transform: scale(0.95); opacity: 0.7; }
      50% { transform: scale(1.1); opacity: 1; }
      100% { transform: scale(0.95); opacity: 0.7; }
    }
    
    .floating {
      animation: floating 6s ease-in-out infinite;
    }
    
    @keyframes floating {
      0% { transform: translateY(0px); }
      50% { transform: translateY(-15px); }
      100% { transform: translateY(0px); }
    }
    
    .input-highlight {
      transition: all 0.3s ease;
      background: rgba(255, 255, 255, 0.05);
    }
    
    .input-highlight:focus {
      background: rgba(255, 255, 255, 0.1);
      box-shadow: 0 0 0 2px rgba(0, 240, 255, 0.3);
    }
  </style>
</head>
<body class="min-h-screen overflow-x-hidden">
  <div class="neural-path"></div>
  
  <%- include('partials/navbar') %>

  <div class="container mx-auto px-4 py-12 relative z-10">
    <!-- Floating AI Elements -->
    <div class="absolute -right-20 top-1/4 opacity-10 floating">
      <i class="fas fa-atom text-8xl text-blue-400"></i>
    </div>
    <div class="absolute -left-20 bottom-1/4 opacity-10 floating" style="animation-delay: 2s;">
      <i class="fas fa-network-wired text-8xl text-purple-400"></i>
    </div>

    <!-- Main Content -->
    <div class="max-w-4xl mx-auto">
      <!-- Header -->
      <div class="flex items-center mb-8 animate__animated animate__fadeIn">
        <div class="mr-4">
          <div class="w-12 h-12 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
            <i class="fas fa-robot text-xl text-white"></i>
          </div>
        </div>
        <div>
          <h1 class="text-3xl font-bold gradient-text">NeuroInterview Session</h1>
          <p class="text-gray-400">AI-powered mock interview simulation</p>
        </div>
      </div>

      <!-- Interview Panel -->
      <div class="neural-card p-8 mb-8 animate__animated animate__fadeInUp">
        <form action="/interview" method="POST" class="space-y-6">
          <!-- Interview Type Selector -->
          <div>
            <label class="block text-sm font-medium text-gray-400 mb-3">Interview Mode</label>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <label class="relative cursor-pointer">
                <input type="radio" name="interviewType" value="technical" class="hidden peer" checked>
                <div class="neural-card p-4 text-center transition-all peer-checked:border-blue-500 peer-checked:ring-2 peer-checked:ring-blue-500/30">
                  <i class="fas fa-code text-2xl mb-2 text-blue-400"></i>
                  <h3 class="font-medium">Technical</h3>
                  <p class="text-xs text-gray-400 mt-1">Coding & Algorithms</p>
                </div>
              </label>
              <label class="relative cursor-pointer">
                <input type="radio" name="interviewType" value="behavioral" class="hidden peer">
                <div class="neural-card p-4 text-center transition-all peer-checked:border-purple-500 peer-checked:ring-2 peer-checked:ring-purple-500/30">
                  <i class="fas fa-comments text-2xl mb-2 text-purple-400"></i>
                  <h3 class="font-medium">Behavioral</h3>
                  <p class="text-xs text-gray-400 mt-1">Soft Skills</p>
                </div>
              </label>
              <label class="relative cursor-pointer">
                <input type="radio" name="interviewType" value="system-design" class="hidden peer">
                <div class="neural-card p-4 text-center transition-all peer-checked:border-teal-500 peer-checked:ring-2 peer-checked:ring-teal-500/30">
                  <i class="fas fa-project-diagram text-2xl mb-2 text-teal-400"></i>
                  <h3 class="font-medium">System Design</h3>
                  <p class="text-xs text-gray-400 mt-1">Architecture</p>
                </div>
              </label>
            </div>
          </div>

          <!-- Question Input -->
          <div>
            <label class="block text-sm font-medium text-gray-400 mb-2">Your Question/Topic</label>
            <textarea name="prompt" rows="4" 
              class="input-highlight w-full p-4 border border-gray-800 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Ask about React hooks, system architecture, or any tech topic..."></textarea>
          </div>

          <!-- Submit Button -->
          <button type="submit" 
            class="w-full glow-button py-3 px-4 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg font-bold text-white relative overflow-hidden transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/20">
            <span class="relative z-10">
              <i class="fas fa-bolt mr-2"></i> Generate AI Response
            </span>
          </button>
        </form>
      </div>

    


      <% if (error) { %>
        <!-- Error Message -->
        <div class="neural-card p-6 border-l-4 border-red-500 bg-red-900/20 animate__animated animate__shakeX">
          <div class="flex items-start">
            <i class="fas fa-exclamation-triangle text-red-400 mt-1 mr-3"></i>
            <div>
              <h3 class="font-bold text-red-400 mb-1">Neural Network Error</h3>
              <p class="text-gray-300"><%- error %></p>
            </div>
          </div>
        </div>
      <% } %>

      <!-- Tips Section -->
      <div class="neural-card p-8 animate__animated animate__fadeInUp">
        <div class="flex items-center mb-6">
          <div class="w-10 h-10 rounded-full bg-teal-500/10 flex items-center justify-center mr-4">
            <i class="fas fa-lightbulb text-teal-400"></i>
          </div>
          <h2 class="text-2xl font-bold gradient-text">AI Interview Tips</h2>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="neural-card p-5 hover:border-blue-500/30 transition-all">
            <div class="flex items-center mb-3">
              <div class="w-8 h-8 rounded-full bg-blue-500/10 flex items-center justify-center mr-3">
                <i class="fas fa-code text-blue-400"></i>
              </div>
              <h3 class="font-medium">Technical Interviews</h3>
            </div>
            <ul class="text-sm text-gray-400 space-y-2">
              <li class="flex items-start">
                <i class="fas fa-check-circle text-green-400 mt-1 mr-2"></i>
                <span>Explain your thought process out loud</span>
              </li>
              <li class="flex items-start">
                <i class="fas fa-check-circle text-green-400 mt-1 mr-2"></i>
                <span>Start with brute force solution first</span>
              </li>
              <li class="flex items-start">
                <i class="fas fa-check-circle text-green-400 mt-1 mr-2"></i>
                <span>Ask clarifying questions</span>
              </li>
            </ul>
          </div>
          
          <div class="neural-card p-5 hover:border-purple-500/30 transition-all">
            <div class="flex items-center mb-3">
              <div class="w-8 h-8 rounded-full bg-purple-500/10 flex items-center justify-center mr-3">
                <i class="fas fa-comments text-purple-400"></i>
              </div>
              <h3 class="font-medium">Behavioral Interviews</h3>
            </div>
            <ul class="text-sm text-gray-400 space-y-2">
              <li class="flex items-start">
                <i class="fas fa-check-circle text-green-400 mt-1 mr-2"></i>
                <span>Use STAR method for stories</span>
              </li>
              <li class="flex items-start">
                <i class="fas fa-check-circle text-green-400 mt-1 mr-2"></i>
                <span>Be specific with examples</span>
              </li>
              <li class="flex items-start">
                <i class="fas fa-check-circle text-green-400 mt-1 mr-2"></i>
                <span>Show enthusiasm and curiosity</span>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
  <script>
    // Form submission animation
    document.querySelector('form').addEventListener('submit', function(e) {
      const button = this.querySelector('button[type="submit"]');
      button.innerHTML = '<i class="fas fa-circle-notch fa-spin mr-2"></i> Processing...';
      button.classList.add('cursor-not-allowed', 'opacity-75');
    });


    // Animate radio card selections
    document.querySelectorAll('input[name="interviewType"]').forEach(radio => {
      radio.addEventListener('change', function() {
        this.closest('label').querySelector('div').classList.add('animate__animated', 'animate__pulse');
        setTimeout(() => {
          this.closest('label').querySelector('div').classList.remove('animate__animated', 'animate__pulse');
        }, 500);
      });
    });
  </script>
</body>
</html>